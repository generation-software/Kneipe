# Copyright 2025 Paion Data. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: Java Webservice CI/CD

"on":
  workflow_call:
    inputs:
      use-custom-lycheeignore-file:
        description: |
          Whether or not to use custome .lycheeignore file located at the root of downstream project. Default to "false"
        type: boolean
        required: false
      user-name:
        description: 'git config user.name'
        required: false
        type: string
      user-email:
        description: 'git config user.email'
        required: false
        type: string
      cname:
        description: 'The CNAME of the React app deployed to GitHub Pages'
        required: false
        type: string
      dockerhub-username:
        required: false
        type: string
      docker-image-name:
        required: false
        type: string

env:
  JDK_VERSION: 17
  JDK_DISTRIBUTION: 'adopt'

jobs:
  cancel-previous:
    uses: paion-data/hashistack/.github/workflows/cancel-previous-run.yaml@master
    secrets: inherit

  yml-md-style-and-link-checks:
    uses: paion-data/hashistack/.github/workflows/yml-md-style-and-link-checks.yaml@master
    with:
      use-custom-lycheeignore-file: ${{ inputs.use-custom-lycheeignore-file }}

  tests:
    name: Unit & Integration Tests
    needs: yml-md-style-and-link-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Run unit & integration tests
        run: mvn -B clean verify

  documentation:
    if: ${{ !github.event.repository.private }}
    name: Test & Release Documentation (including Javadoc)
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Setup yarn
        run: |
          corepack enable
          yarn set version latest
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Install dependencies
        working-directory: docs
        run: yarn
      - name: Build documentations
        working-directory: docs
        run: yarn build
      - name: Generate Javadoc
        run: mvn -B clean javadoc:javadoc
      - name: Move Javadoc into documentation directory
        run: mv target/site/apidocs/ docs/build/apidocs/
      - name: Deploy documentation (including Javadoc) to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build
          enable_jekyll: false
          user-name: ${{ inputs.user-name }}
          user-email: ${{ inputs.user-email }}
          cname: ${{ inputs.cname }}

  docker-image:
    if: ${{ !github.event.repository.private }}
    name: Build Test & Release Development Docker Image
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Build App WAR file so that Docker can pickup during image build
        run: mvn clean package
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Test image build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: ${{ inputs.dockerhub-username }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image to DockerHub
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ inputs.dockerhub-username }}/${{ inputs.docker-image-name }}:latest
      - name: Push image Description
        if: github.ref == 'refs/heads/master'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ inputs.dockerhub-username }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ inputs.dockerhub-username }}/${{ inputs.docker-image-name }}
          readme-filepath: README.md
